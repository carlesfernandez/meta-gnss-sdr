SUMMARY = "High-performance data management and storage suite"
DESCRIPTION = "HDF5 is a data model, library, and file format for storing and managing data."
HOMEPAGE = "https://portal.hdfgroup.org/display/HDF5/HDF5"
LICENSE = "BSD"
LIC_FILES_CHKSUM = "file://COPYING;md5=f1883baf3a14753e47d9152b3b994ada"
PR = "r1"

BBCLASSEXTEND = "native"

SRC_URI = "http://www.hdfgroup.org/ftp/HDF5/releases/hdf5-1.8/hdf5-1.8.15-patch1/src/hdf5-1.8.15-patch1.tar.bz2"

# automake is stricter on quoting now
SRC_URI += "file://hdf5-am-quote.patch"

# switch the threading off
SRC_URI += "file://hdf5-threads.patch"

# force shared library build
SRC_URI += "file://hdf5-shared.patch"

# avoid generating of the H5Tinit.c and H5lib_settings.c files
SRC_URI += "file://hdf5-c.patch"

# H5Tinit.c and H5lib_settings.c files for each platform
SRC_URI += "${H5_CONFIG_FILES}"

H5_CONFIG_FILES ?= " \
    file://H5Tinit.c \
    file://H5lib_settings.c \
"

H5_CONFIG_FILES_arm = " \
    file://H5Tinit.c \
    file://H5lib_settings.c \
"
CONFIGFILESURI_native = " \
    file://H5Tinit.c \
    file://H5lib_settings.c \
"

SRC_URI[md5sum] = "3c0d7a8c38d1abc7b40fc12c1d5f2bb8"
SRC_URI[sha256sum] = "a5afc630c4443547fff15e9637b5b10404adbed4c00206d89517d32d6668fb32"

DEPENDS += "zlib"
S = "${WORKDIR}/hdf5-1.8.15-patch1"

EXTRA_OECONF = "--with-szlib=no --with-pthread=no --enable-threadsafe=no"
EXTRA_OECONF += "hdf5_cv_fp_to_integer_overflow_works=yes"
EXTRA_OECONF += "hdf5_cv_ldouble_to_long_special=no"
EXTRA_OECONF += "hdf5_cv_long_to_ldouble_special=no"
EXTRA_OECONF += "hdf5_cv_ldouble_to_llong_accurate=yes"
EXTRA_OECONF += "hdf5_cv_llong_to_ldouble_correct=yes"

PROVIDES += "${PN}-tests ${PN}-tests-dbg ${PN}-examples"
PACKAGES += "${PN}-tests ${PN}-tests-dbg ${PN}-examples"

FILES_${PN} += "${libdir}/libhdf5.settings"
FILES_${PN}-tests = "${libdir}/hdf5-tests/[a-z]*"
FILES_${PN}-tests-dbg = "${libdir}/hdf5-tests/.debug"
FILES_${PN}-examples = "${datadir}/hdf5_examples"

inherit autotools pkgconfig

# add files generated by HDF5 during compilation; these cannot be
# generated during cross-compilation
do_configure_append() {
    cp ${WORKDIR}/H5*.c ${B}/src/
}

do_install_append() {
    install -d ${D}/${libdir}/hdf5-tests
    cp -r ${B}/test/.libs/* ${D}/${libdir}/hdf5-tests/
    rm ${D}/${libdir}/hdf5-tests/libdynlib*
    rm ${D}/${libdir}/hdf5-tests/*.a
    rm ${D}/${libdir}/hdf5-tests/*.o
    rm ${D}/${libdir}/hdf5-tests/*.la
}
